name: CI - Docker Build and Test

on: pull_request

# Cancel outdated builds when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Docker build and smoke test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: .
          # Build only amd64 for PRs to save time
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
          load: true
          tags: gatehook:test

      # Smoke test: Verify the Docker image can execute the binary
      # This catches Dockerfile configuration issues like:
      # - Incorrect ENTRYPOINT path
      # - Binary not copied to correct location
      # - File permission issues
      # - Logging system not working
      # Note: With musl static linking, runtime dependency issues are not expected
      - name: Test Docker image startup
        run: |
          echo "Testing image: gatehook:test"

          # Debug: Check image details
          echo "=== Image Information ==="
          docker images gatehook:test
          docker inspect gatehook:test | grep -A 5 "Entrypoint\|Cmd"

          echo ""
          echo "=== Running container ==="
          # Run binary without env vars - should produce error output
          # This verifies: 1) binary executes, 2) logging works, 3) error handling works
          set +e
          docker run --rm gatehook:test 2>&1 | tee /tmp/docker-test-output.txt
          EXIT_CODE=$?
          set -e

          echo ""
          echo "=== Test Results ==="
          echo "Exit code: $EXIT_CODE"
          echo "Output size: $(wc -c < /tmp/docker-test-output.txt) bytes"
          echo "Output lines: $(wc -l < /tmp/docker-test-output.txt)"
          echo ""
          echo "Output content:"
          cat /tmp/docker-test-output.txt
          echo ""
          echo "Output (hex dump, first 200 bytes):"
          head -c 200 /tmp/docker-test-output.txt | xxd || true
          echo ""

          # Check that we got some output
          if [ ! -s /tmp/docker-test-output.txt ]; then
            echo "ERROR: No output from container - binary may not have executed"
            echo "This could mean:"
            echo "  - Binary doesn't exist at ENTRYPOINT path"
            echo "  - Binary fails silently without output"
            echo "  - Output is being lost somewhere"
            exit 1
          fi

          # Check for error message about missing configuration
          # The application should output an error about missing DISCORD_TOKEN or WEBHOOK_URL
          if ! grep -qi "error" /tmp/docker-test-output.txt; then
            echo "ERROR: Expected error message not found in output"
            echo "The application should report configuration errors when env vars are missing"
            exit 1
          fi

          # Verify the error is related to configuration/environment variables
          if ! grep -Ei "discord_token|webhook_url|configuration|environment|variable|missing" /tmp/docker-test-output.txt; then
            echo "ERROR: Output doesn't mention expected configuration fields"
            echo "Expected keywords: discord_token, webhook_url, configuration, environment, variable, or missing"
            exit 1
          fi

          echo "âœ“ Docker image smoke test passed"
          echo "  - Binary executed successfully"
          echo "  - Logging system is working"
          echo "  - Error handling is working correctly"
